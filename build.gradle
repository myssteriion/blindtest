buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.12.RELEASE"
    }
}


apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "war"

def currentVersion = "3.0.0-SNAPSHOT"
def myssteriionUtilsVersion = "2.0.0-SNAPSHOT"

def deliveryFolder = "delivery"
def env = project.hasProperty("env") ? project.env : "dev"

group = "com.myssteriion"
version = currentVersion
sourceCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter:2.1.12.RELEASE"
	implementation "org.springframework.boot:spring-boot-starter-web:2.1.12.RELEASE"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.1.12.RELEASE"
	implementation "com.h2database:h2:1.4.199"
	implementation "ch.qos.logback:logback-core:1.2.3"
	implementation "com.fasterxml.jackson.core:jackson-databind:2.9.9"

	implementation "com.myssteriion:com.myssteriion.utils:" + myssteriionUtilsVersion

	compile "se.michaelthelin.spotify:spotify-web-api-java:4.2.0"
	
	testImplementation "org.springframework.boot:spring-boot-starter-test:2.1.12.RELEASE"
	testImplementation "com.googlecode.junit-toolbox:junit-toolbox:2.4"
	testImplementation "org.powermock:powermock-module-junit4:2.0.5"
	testImplementation "org.powermock:powermock-api-mockito2:2.0.5"
}

clean {
	delete deliveryFolder
}

build {
	doLast {
		copy {
		    from "gradle.profiles/common"
	    	include "**/*"
		    into deliveryFolder
		}
		copy {
			from "gradle.profiles/" + env
			include "**/*"
			into deliveryFolder
		}
		copy {
		    from "build/libs"
		    include "*"
		    into deliveryFolder + "/libs"
		}
		copy {
		    from "front/dist"
		    include "**/*"
		    into deliveryFolder + "/libs"
		}
		
		delete "logs"		
		mkdir deliveryFolder + "/musiques/annees_60"
		mkdir deliveryFolder + "/musiques/annees_70"
		mkdir deliveryFolder + "/musiques/annees_80"
		mkdir deliveryFolder + "/musiques/annees_90"
		mkdir deliveryFolder + "/musiques/annees_2000"
		mkdir deliveryFolder + "/musiques/annees_2010"
		mkdir deliveryFolder + "/musiques/series-cinemas"
		mkdir deliveryFolder + "/musiques/disney"
	}
}

test {
	environment "SPRING_CONFIG_LOCATION", "file:///" + "${projectDir}" + "/src/test/resources/"
    exclude "**/TestSuite.class"
}
